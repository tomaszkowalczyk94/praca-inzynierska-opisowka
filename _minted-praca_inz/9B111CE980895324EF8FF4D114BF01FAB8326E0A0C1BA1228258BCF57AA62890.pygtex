\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{public} \PYG{k+kd}{class} \PYG{n+nc}{LoadAFromITest} \PYG{o}{\PYGZob{}}
   \PYG{k+kd}{private} \PYG{n}{Z80} \PYG{n}{z80}\PYG{o}{;}

   \PYG{n+nd}{@Before}
   \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setUp}\PYG{o}{()} \PYG{o}{\PYGZob{}}
       \PYG{n}{z80} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Z80}\PYG{o}{();}
   \PYG{o}{\PYGZcb{}}

   \PYG{k+kd}{private} \PYG{k+kt}{void} \PYG{n+nf}{prepareZ80}\PYG{o}{(}\PYG{n}{XBit8} \PYG{n}{regI}\PYG{o}{)} \PYG{k+kd}{throws} \PYG{n}{MemoryException} \PYG{o}{\PYGZob{}}
       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getMemory}\PYG{o}{().}\PYG{n+na}{write}\PYG{o}{(}\PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfUnsigned}\PYG{o}{(}\PYG{l+m+mh}{0xED}\PYG{o}{));}
       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getMemory}\PYG{o}{().}\PYG{n+na}{write}\PYG{o}{(}\PYG{l+m+mi}{1}\PYG{o}{,} \PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfUnsigned}\PYG{o}{(}\PYG{l+m+mh}{0x57}\PYG{o}{));} \PYG{c+c1}{//ld A,I}

       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{setF}\PYG{o}{(}\PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfUnsigned}\PYG{o}{(}\PYG{l+m+mh}{0xFF}\PYG{o}{));}

       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{setIff2}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{);}

       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{setI}\PYG{o}{(}\PYG{n}{regI}\PYG{o}{);}
   \PYG{o}{\PYGZcb{}}

   \PYG{n+nd}{@Test}
   \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{execute}\PYG{o}{()} \PYG{k+kd}{throws} \PYG{n}{Exception} \PYG{o}{\PYGZob{}}
       \PYG{n}{prepareZ80}\PYG{o}{(}\PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfSigned}\PYG{o}{(}\PYG{l+m+mh}{0x44}\PYG{o}{));}
       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{runOneInstruction}\PYG{o}{();}

       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{l+m+mh}{0x44}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getA}\PYG{o}{().}\PYG{n+na}{getSignedValue}\PYG{o}{());}

       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{S}\PYG{o}{));}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{Z}\PYG{o}{));}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{H}\PYG{o}{));}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{PV}\PYG{o}{));}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{N}\PYG{o}{));}

       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{l+m+mi}{2}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegisterBank}\PYG{o}{().}\PYG{n+na}{getPc}\PYG{o}{().}\PYG{n+na}{getUnsignedValue}\PYG{o}{());}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{l+m+mi}{9}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getClockCyclesCounter}\PYG{o}{());}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{l+m+mi}{1}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getInstructionCounter}\PYG{o}{());}
   \PYG{o}{\PYGZcb{}}

   \PYG{n+nd}{@Test}
   \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{testFlags1}\PYG{o}{()} \PYG{k+kd}{throws} \PYG{n}{Exception} \PYG{o}{\PYGZob{}}
       \PYG{n}{prepareZ80}\PYG{o}{(}\PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfSigned}\PYG{o}{(\PYGZhy{}}\PYG{l+m+mi}{40}\PYG{o}{));}
       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{runOneInstruction}\PYG{o}{();}

       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{S}\PYG{o}{));}
   \PYG{o}{\PYGZcb{}}

   \PYG{n+nd}{@Test}
   \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{testFlags2}\PYG{o}{()} \PYG{k+kd}{throws} \PYG{n}{Exception} \PYG{o}{\PYGZob{}}
       \PYG{n}{prepareZ80}\PYG{o}{(}\PYG{n}{XBit8}\PYG{o}{.}\PYG{n+na}{valueOfSigned}\PYG{o}{(}\PYG{l+m+mi}{0}\PYG{o}{));}
       \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{runOneInstruction}\PYG{o}{();}

       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{S}\PYG{o}{));}
       \PYG{n}{Assert}\PYG{o}{.}\PYG{n+na}{assertEquals}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{,} \PYG{n}{z80}\PYG{o}{.}\PYG{n+na}{getRegs}\PYG{o}{().}\PYG{n+na}{getFlag}\PYG{o}{(}\PYG{n}{Flag}\PYG{o}{.}\PYG{n+na}{Z}\PYG{o}{));}
   \PYG{o}{\PYGZcb{}}

\PYG{o}{\PYGZcb{}}
\end{Verbatim}
